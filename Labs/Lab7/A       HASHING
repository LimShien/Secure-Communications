A       HASHING
A.1 Match the hash signatures with their words (“Falkirk”,
    “Edinburgh”, “Glasgow” and “Stirling”).

    03CF54D8CE19777B12732B8C50B3B66F -> “Edinburgh”
    D586293D554981ED611AB7B01316D2D5 -> “Glasgow”
    48E935332AADEC763F2C82CDB4601A25 -> “Falkirk”
    EE19033300A54DF2FA41DB9881B4B723 -> “Stirling”

A.2 Using:& Web link (Hashing): http://asecuritysite.com/encryption/md5
    Determine the number of hex characters in the following hash signatures.
    MD5 hex chars:  32
    SHA-1 hex chars:40
    SHA-256 hex chars:64
    SHA-384 hex chars:96
    SHA-512 hex chars:128
    How does the number of hex characters
    relate to the length of the hash
    signature:

A.5 From Ubuntu, download the following:
    & Web link (Files):
    http://asecuritysite.com/files02.zip and the files should have the following MD5
    signatures:
    MD5(1.txt)= 5d41402abc4b2a76b9719d911017c592 
          ->    5d41402abc4b2a76b9719d911017c592      
    MD5(2.txt)= 69faab6268350295550de7d587bc323d
           ->   e3fc91b12a36c2334ebb5b66caa2d75b        
    MD5(3.txt)= fea0f1f6fede90bd0a925b4194deac11
            ->  fea0f1f6fede90bd0a925b4194deac11
    MD5(4.txt)= d89b56f81cd7b82856231e662429bcf2
            ->  d89b56f81cd7b82856231e662429bcf2

A.6 From Ubuntu, download the following ZIP file:
& Web link (PS Files):
    http://asecuritysite.com/letters.zip
    On your Ubuntu instance, you should be able to view
    the files by double clicking on them in the file explorer
    (as you should have a PostScript viewer installed).
    Do the files have different contents?
    Now determine the MD5 signature for
    them. What can you observe from the
    result?

    690c0536fbe3f950f869907042e17069  letter_of_rec.ps

    ff8f436a84a18f60d31b8d4caed228db  order.ps

B Run the hashcat benchmark (eg hashcat –b -m  0), and complete the following:
    Hash rate for MD5:   251.6 MH/s (15.63ms)
    Hash rate for SHA-1:  119.4 MH/s (33.60ms)
    Hash rate for SHA-256: 13216.4 kH/s (77.12ms)
    Hash rate for APR1: 12921 H/s (94.21ms)

b.2 On Ubuntu, next create a word file (words)
    with the words of “napier”, “password”
    “Ankle123” and “inkwell”
    Using hashcat crack the following MD5
    signatures (hash1):
    232DD5D7274E0D662F36C575A3BD634C
    5F4DCC3B5AA765D61D8327DEB882CF99
    6D5875265D1979BDAD1C8A8F383C5FF5
    04013F78ACCFEC9B673005FC6F20698D
    Command used

    5f4dcc3b5aa765d61d8327deb882cf99:password        
    6d5875265d1979bdad1c8a8f383c5ff5:Ankle123        
    04013f78accfec9b673005fc6f20698d:inkwell 
    232DD5D7274E0D662F36C575A3BD634C:napier

B.3  Using the method used in the first part of this
    tutorial, find crack the following for names of
    fruits (the fruits are all in lowercase):

    FE01D67A002DFA0F3AC084298142ECCD: orange
    1f3870be274f6c49b3e31a0c6728957f:apple           
    72b302bf297a228a75730123efef7c41:banana          
    889560d93572d538078ce1578567b91a:peach           
    8893dc16b1b2534bab7b03727145a2bb:pear

b.4 We have hashed a SHA-256 value of the
    following and put it into a file named
    file.txt:
    106a5842fc5fce6f663176285ed1516dbb
    1e3d15c05abab12fdca46d60b539b7
    By adding a word of “help” in a word file of
    words.txt, prove that the following cracks the
    hash (where file.txt contains the hashed
    value):


    hashcat -m 1400 file.txt words.txt
    106a5842fc5fce6f663176285ed1516dbb1e3d15c05abab12fdca46d60b539b7:help


b.5 The following is an NTLM hash, for “help”:
    0333c27eb4b9401d91fef02a9f74840e
    Prove that the following can crack the hash
    (where file.txt contains the hashed value):
    hashcat -m 1000 file.txt words.txt

    0333c27eb4b9401d91fef02a9f74840e:help    

B.6 Now crack the following Scottish football teams (all are single words):
4
635450503029fc2484f1d7eb80da8e25bdc1770e1dd14710c592c8929ba37ee9
b3cb6d04f9ccbf6dfe08f40c11648360ca421f0c531e69f326a72dc7e80a0912
bc5fb9abe8d5e72eb49cf00b3dbd173cbf914835281fadd674d5a2b680e47d50
6ac16a68ac94ca8298c9c2329593a4a4130b6fed2472a98424b7b4019ef1d968


B.7 Rather than use a dictionary, we can use a brute force a hashed password using a
lowercase character set:
hashcat -a 3 -m 1400 file.txt ?l?l?l?l?l?l?l?l --increment
Using this style of command (look at the hash type and perhaps this is a SHA-256 hash),
crack the following words:
4dc2159bba05da394c3b94c6f54354db1f1f43b321ac4bbdfc2f658237858c70 - EYE
0282d9b79f42c74c1550b20ff2dd16aafc3fe5d8ae9a00b2f66996d0ae882775 - FACE
47c215b5f70eb9c9b4bcb2c027007d6cf38a899f40d1d1da6922e49308b15b69 - HAIR


B.8 We can focus on given letters, such as where we add a letter or a digit at the end:
hashcat -a 3 -m 1000 file.txt password?l
hashcat -a 3 -m 1000 file.txt password?u
hashcat -a 3 -m 1000 file.txt password?d
Using these commands, crack the following:
7a6c8de8ad7f89b922cc29c9505f58c3
db0edd04aaac4506f7edab03ac855d56
Note: Remember to try both MD5 (0) and NTLM hash (1000).

db0edd04aaac4506f7edab03ac855d56:password5   
7a6c8de8ad7f89b922cc29c9505f58c3:passwordW 

